<?xml version="1.0" encoding="utf-8"?>
<testsuite package="org.spotbugs" time="0" tests="11" errors="17" name="findbugs">
<testcase time="0" name="model/Time.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="view/ViewInterface.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="model/Contract.java" classname="FindBugs Issues">
<failure message="issues" ><![CDATA[lines: 19-65 
getItem() may expose internal representation by returning Contract.item 
May expose internal representation by returning reference to mutable object 
Returning a reference to a mutable object value stored in one of the 
  object's fields exposes the internal representation of the object. If 
  instances are accessed by untrusted code, and unchecked changes to the 
  mutable object would compromise security or other important properties, 
  you will need to do something different. Returning a new copy of the 
  object is better approach in many situations.
----------------
lines: 19-65 
getLender() may expose internal representation by returning Contract.lender 
May expose internal representation by returning reference to mutable object 
Returning a reference to a mutable object value stored in one of the 
  object's fields exposes the internal representation of the object. If 
  instances are accessed by untrusted code, and unchecked changes to the 
  mutable object would compromise security or other important properties, 
  you will need to do something different. Returning a new copy of the 
  object is better approach in many situations.
----------------
lines: 19-65 
new model.Contract(int, int, Item, Member, int) may expose internal 
  representation by storing an externally mutable object into Contract.item 
May expose internal representation by incorporating reference to mutable 
  object 
This code stores a reference to an externally mutable object into the 
  internal representation of the object. If instances are accessed by 
  untrusted code, and unchecked changes to the mutable object would 
  compromise security or other important properties, you will need to do 
  something different. Storing a copy of the object is better approach in 
  many situations.
----------------
lines: 19-65 
new model.Contract(int, int, Item, Member, int) may expose internal 
  representation by storing an externally mutable object into 
  Contract.lender 
May expose internal representation by incorporating reference to mutable 
  object 
This code stores a reference to an externally mutable object into the 
  internal representation of the object. If instances are accessed by 
  untrusted code, and unchecked changes to the mutable object would 
  compromise security or other important properties, you will need to do 
  something different. Storing a copy of the object is better approach in 
  many situations.
----------------
lines: 19-65 
setItem(Item) may expose internal representation by storing an externally 
  mutable object into Contract.item 
May expose internal representation by incorporating reference to mutable 
  object 
This code stores a reference to an externally mutable object into the 
  internal representation of the object. If instances are accessed by 
  untrusted code, and unchecked changes to the mutable object would 
  compromise security or other important properties, you will need to do 
  something different. Storing a copy of the object is better approach in 
  many situations.
----------------
lines: 19-65 
setLender(Member) may expose internal representation by storing an 
  externally mutable object into Contract.lender 
May expose internal representation by incorporating reference to mutable 
  object 
This code stores a reference to an externally mutable object into the 
  internal representation of the object. If instances are accessed by 
  untrusted code, and unchecked changes to the mutable object would 
  compromise security or other important properties, you will need to do 
  something different. Storing a copy of the object is better approach in 
  many situations.
----------------
]]></failure>
</testcase><testcase time="0" name="controller/App.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="view/ConsoleUi.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="model/Admin.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="model/ModelInterface.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="model/Service.java" classname="FindBugs Issues">
<failure message="issues" ><![CDATA[lines: 22-280 
getAllItems() may expose internal representation by returning Service.items 
May expose internal representation by returning reference to mutable object 
Returning a reference to a mutable object value stored in one of the 
  object's fields exposes the internal representation of the object. If 
  instances are accessed by untrusted code, and unchecked changes to the 
  mutable object would compromise security or other important properties, 
  you will need to do something different. Returning a new copy of the 
  object is better approach in many situations.
----------------
lines: 22-280 
getAllMembers() may expose internal representation by returning 
  Service.members 
May expose internal representation by returning reference to mutable object 
Returning a reference to a mutable object value stored in one of the 
  object's fields exposes the internal representation of the object. If 
  instances are accessed by untrusted code, and unchecked changes to the 
  mutable object would compromise security or other important properties, 
  you will need to do something different. Returning a new copy of the 
  object is better approach in many situations.
----------------
lines: 22-280 
getLoggedInMember() may expose internal representation by returning 
  Service.loggedInMember 
May expose internal representation by returning reference to mutable object 
Returning a reference to a mutable object value stored in one of the 
  object's fields exposes the internal representation of the object. If 
  instances are accessed by untrusted code, and unchecked changes to the 
  mutable object would compromise security or other important properties, 
  you will need to do something different. Returning a new copy of the 
  object is better approach in many situations.
----------------
lines: 22-280 
getTime() may expose internal representation by returning Service.time 
May expose internal representation by returning reference to mutable object 
Returning a reference to a mutable object value stored in one of the 
  object's fields exposes the internal representation of the object. If 
  instances are accessed by untrusted code, and unchecked changes to the 
  mutable object would compromise security or other important properties, 
  you will need to do something different. Returning a new copy of the 
  object is better approach in many situations.
----------------
]]></failure>
</testcase><testcase time="0" name="model/Item.java" classname="FindBugs Issues">
<failure message="issues" ><![CDATA[lines: 20-71 
getOwner() may expose internal representation by returning Item.owner 
May expose internal representation by returning reference to mutable object 
Returning a reference to a mutable object value stored in one of the 
  object's fields exposes the internal representation of the object. If 
  instances are accessed by untrusted code, and unchecked changes to the 
  mutable object would compromise security or other important properties, 
  you will need to do something different. Returning a new copy of the 
  object is better approach in many situations.
----------------
lines: 20-71 
new model.Item(String, String, String, int, Member, Time) may expose 
  internal representation by storing an externally mutable object into 
  Item.owner 
May expose internal representation by incorporating reference to mutable 
  object 
This code stores a reference to an externally mutable object into the 
  internal representation of the object. If instances are accessed by 
  untrusted code, and unchecked changes to the mutable object would 
  compromise security or other important properties, you will need to do 
  something different. Storing a copy of the object is better approach in 
  many situations.
----------------
lines: 20-71 
setOwner(Member) may expose internal representation by storing an 
  externally mutable object into Item.owner 
May expose internal representation by incorporating reference to mutable 
  object 
This code stores a reference to an externally mutable object into the 
  internal representation of the object. If instances are accessed by 
  untrusted code, and unchecked changes to the mutable object would 
  compromise security or other important properties, you will need to do 
  something different. Storing a copy of the object is better approach in 
  many situations.
----------------
]]></failure>
</testcase><testcase time="0" name="controller/ObjectController.java" classname="FindBugs Issues">
<failure message="issues" ><![CDATA[lines: 18-159 
new controller.ObjectController(Service, ViewInterface) may expose internal 
  representation by storing an externally mutable object into 
  ObjectController.model 
May expose internal representation by incorporating reference to mutable 
  object 
This code stores a reference to an externally mutable object into the 
  internal representation of the object. If instances are accessed by 
  untrusted code, and unchecked changes to the mutable object would 
  compromise security or other important properties, you will need to do 
  something different. Storing a copy of the object is better approach in 
  many situations.
----------------
lines: 18-159 
new controller.ObjectController(Service, ViewInterface) may expose internal 
  representation by storing an externally mutable object into 
  ObjectController.view 
May expose internal representation by incorporating reference to mutable 
  object 
This code stores a reference to an externally mutable object into the 
  internal representation of the object. If instances are accessed by 
  untrusted code, and unchecked changes to the mutable object would 
  compromise security or other important properties, you will need to do 
  something different. Storing a copy of the object is better approach in 
  many situations.
----------------
]]></failure>
</testcase><testcase time="0" name="model/Member.java" classname="FindBugs Issues">
<failure message="issues" ><![CDATA[lines: 29-155 
getContracts() may expose internal representation by returning 
  Member.ownedContracts 
May expose internal representation by returning reference to mutable object 
Returning a reference to a mutable object value stored in one of the 
  object's fields exposes the internal representation of the object. If 
  instances are accessed by untrusted code, and unchecked changes to the 
  mutable object would compromise security or other important properties, 
  you will need to do something different. Returning a new copy of the 
  object is better approach in many situations.
----------------
lines: 29-155 
getOwnedItems() may expose internal representation by returning 
  Member.ownedItems 
May expose internal representation by returning reference to mutable object 
Returning a reference to a mutable object value stored in one of the 
  object's fields exposes the internal representation of the object. If 
  instances are accessed by untrusted code, and unchecked changes to the 
  mutable object would compromise security or other important properties, 
  you will need to do something different. Returning a new copy of the 
  object is better approach in many situations.
----------------
]]></failure>
</testcase></testsuite>