<?xml version="1.0" encoding="utf-8"?>
<testsuite package="org.spotbugs" time="0" tests="10" errors="3" name="findbugs">
<testcase time="0" name="model/Time.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="view/ViewInterface.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="model/Contract.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="controller/App.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="view/ConsoleUi.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="model/GenerateId.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="model/Service.java" classname="FindBugs Issues">
<failure message="issues" ><![CDATA[lines: 12-193 
new model.Service(Time) may expose internal representation by storing an 
  externally mutable object into Service.time 
May expose internal representation by incorporating reference to mutable 
  object 
This code stores a reference to an externally mutable object into the 
  internal representation of the object. If instances are accessed by 
  untrusted code, and unchecked changes to the mutable object would 
  compromise security or other important properties, you will need to do 
  something different. Storing a copy of the object is better approach in 
  many situations.
----------------
]]></failure>
</testcase><testcase time="0" name="model/Item.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="controller/ObjectController.java" classname="FindBugs Issues">
<failure message="issues" ><![CDATA[lines: 22-229 
new controller.ObjectController(Service, ViewInterface, Time) may expose 
  internal representation by storing an externally mutable object into 
  ObjectController.model 
May expose internal representation by incorporating reference to mutable 
  object 
This code stores a reference to an externally mutable object into the 
  internal representation of the object. If instances are accessed by 
  untrusted code, and unchecked changes to the mutable object would 
  compromise security or other important properties, you will need to do 
  something different. Storing a copy of the object is better approach in 
  many situations.
----------------
lines: 22-229 
new controller.ObjectController(Service, ViewInterface, Time) may expose 
  internal representation by storing an externally mutable object into 
  ObjectController.time 
May expose internal representation by incorporating reference to mutable 
  object 
This code stores a reference to an externally mutable object into the 
  internal representation of the object. If instances are accessed by 
  untrusted code, and unchecked changes to the mutable object would 
  compromise security or other important properties, you will need to do 
  something different. Storing a copy of the object is better approach in 
  many situations.
----------------
]]></failure>
</testcase><testcase time="0" name="model/Member.java" classname="FindBugs Issues">
</testcase></testsuite>